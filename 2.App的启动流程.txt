@startuml

'请先安装PlantUML plugin查看该uml

title __2.App的启动过程__

entity "Launcher"
entity AMS
entity Zygote

entity "App进程" as App
entity Activity
entity ViewRootImpl
entity WMS


Launcher -> AMS: startActivity()
activate AMS
    AMS -> Zygote: socket通信:请求创建App进程
deactivate AMS

activate Zygote
    Zygote -> App: fork App进程
deactivate Zygote


App -> App: ActivityThread.main()
note left :开启loop
activate App
    App->  AMS: attachApplication(appThread)
    note left#ccffe5 : 注册ApplicationThread，\n可以和AMS双向通信。
deactivate App

AMS -> App: thread.bindApplication();
App -> App: (Application)clazz.newInstance();
'https://cs.android.com/android/platform/superproject/+/master:frameworks/base/core/java/android/app/Application.java;bpv=1;bpt=1;l=350'
App -> App: app.attach(context);
note left :1.attachBaseContext\n2.取出mLoadedApk
App -> App: app.onCreate();

AMS -> App: thread.scheduleLaunchActivity()
App -> App: (Activity)clazz.newInstance();
'https://cs.android.com/android/platform/superproject/+/master:frameworks/base/core/java/android/app/Activity.java;l=7724;bpv=1;bpt=1'
App -> Activity:  attach(context, ..., application,)
note left :1.attachBaseContext\n2.初始化Window

App -> Activity:  onCreate()
note left :1.installDecorView

App -> Activity:  onResume()
App -> Activity:  makeVisible()
Activity -> Activity:  wm.addView(decorView)
activate Activity
    Activity -> ViewRootImpl: new ViewRootImpl()
    Activity -> ViewRootImpl: setView(decorView)

    ViewRootImpl -> ViewRootImpl: scheduleTraversals()
    note left :1.注册VSync信号

    ViewRootImpl -> WMS: IWindowSession#addToDisplay(mWindow, ...mInputChannel)
    note left#ccffe5 : 注册IWindow，InputChannel，\n可以和WMS双向通信。
    ViewRootImpl --> Activity
deactivate Activity







@enduml
